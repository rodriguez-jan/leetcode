class Solution:
    def sumSubarrayMins(self, arr: List[int]) -> int:
        MOD = 10 ** 9 + 7
        n = len(arr)
        ret = 0
        
        stack = []
        for i, num in enumerate(arr + [0]):
            while stack and arr[stack[-1]] >= num:
                idx = stack.pop()
                left = idx - (stack[-1] if stack else -1)
                right = i - idx
                ret += left * right * arr[idx]
                
            stack.append(i)
            
        return ret % MOD


#[3,1,2,4]

#mono increasing stack
#[3]
#[1,2,4]

#[1,3,4,5,6,2,3,4,5,1]
#[1,3,4,5,6] val = 2, index = 5
#[1,2,3,4,5] val = 1, index = 10
#[1,1]


#[0,1,2,3,4] , terminates at itr = 5
#indx = 5
#left = 4 - 3
#right = 5 - 4

#pop 4
#index = 4, itr = 5
#left = 4-3 = 1
#right = 5-3 = 2


#[3,2,1,4]
#[3] , index = 1
#[2] , index = 2
#[1,4], index = end of array


#[0], index = 1
#[1], index = 2
#[2,4], index = end of array